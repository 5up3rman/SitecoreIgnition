@using Ignition.Sc.Components.Shared
@model Ignition.Core.Mvc.BaseViewModel
@{ var root = Html.Glass().SitecoreContext.GetHomeItem<IIgnitionPage>();}
<header class="navbar navbar-inverse navbar-fixed-top" role="banner">
	<div class="container">
		<div class="navbar-header">
			<button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
				<span class="sr-only">Toggle navigation</span>
				<span class="icon-bar"></span>
				<span class="icon-bar"></span>
				<span class="icon-bar"></span>
			</button>
			<a class="navbar-brand" href="/"><img src="/Assets/Ignition/img/logo.png" alt="Basica"></a>
		</div>
		<div class="collapse navbar-collapse">
			<ul class="nav navbar-nav navbar-right">

				<li class="@(Model.ContextPage.Id == root.Id ? "active" : string.Empty)"><a href="/">Home</a></li>
				@foreach (var item in root.BaseChildren.OfType<IIgnitionPage>())
				{

					var hasChildren = !item.HideChildrenFromNavigation && item.BaseChildren.OfType<IIgnitionPage>().Any(a => !a.HideFromNavigation);
					<li @(hasChildren ? @"class=""dropdown""" : string.Empty)>
						<a class="@(Model.ContextPage.Id == item.Id ? "active" : string.Empty) @(hasChildren ? "dropdown-toggle" : string.Empty)"
						   href="@(item.Url)">@(item.NavigationTitle ?? item.Name)</a>
						@if (hasChildren)
						{
							<ul class="dropdown-menu">
								@foreach (var subitem in item.BaseChildren.OfType<IIgnitionPage>())
								{
									<li><a href="@subitem.Url">@(subitem.NavigationTitle ?? subitem.Name)</a></li>
								}
								<li class="divider"></li>
								<li><a href="#">Privacy Policy</a></li>
								<li><a href="#">Terms of Use</a></li>
							</ul>
						}
					</li>
				}
			</ul>
		</div>
	</div>
</header><!--/header-->
